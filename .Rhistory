Time_1<-hms(as.character(Time))
update<-hour(Time_1)
return (update)
}
returnMinute<-function(a){
Time<-factor(a)
Time_1<-hms(as.character(Time))
update<-minute(Time_1)
return (update)
}
#Created Function for Point Anomalies using the vector array to compare the values
findPoint<-function(a,value){
v<-as.vector(a)
x<-c(v$x)
for (i in 1:length(x)) {
if(i+1==length(x)){
break
}
t1=x[i]
t2=x[i+1]
diff=t2-t1
if(diff>value){
print("Anomaly")
}
if(diff<value){
print("Normal")
}
}
}
require(zoo)
#Printing Friday evening
DataDf <- read.table("test.txt", header = T, sep = ",")
DataDf$day <- weekdays(as.Date(DataDf$Date,'%d/%m/%Y'))
DataDf$Month<-returnMonth(as.Date(DataDf$Date))
DataDf$Hour<-returnHour(DataDf$Time)
#Splitting the data into seasons
summer<-DataDf[which(DataDf$Month>=5 & DataDf$Month<=8 & DataDf$Hour>=16 & DataDf$day=='Friday'),]
winter<-DataDf[which(DataDf$Month>=9 & DataDf$Month<=12& DataDf$day=='Friday' )]
spring<-DataDf[which(DataDf$Month>=1 & DataDf$Month<=4 & DataDf$day=='Friday')]
#Finding Point Anomalies
p_a<-zoo(c(summer$Global_active_power))
x<-rollapply(p_a,width=15,by=14,FUN=mean,align="left")
update<-data.frame(x)
#x<-findPoint(update,0.5)
#Writing the data frame to a file
write.table(x,"x.txt",sep="\t",row.names=TRUE)
write.table(summer,"summer.txt",sep="\t",row.names=TRUE)
newdata <- DataDf[ which(DataDf$day=='Friday' & DataDf$Hour>=16), ]
class(newdata)
write.table(newdata,"Update.txt",sep="\t",row.names=TRUE)
#train <- newdata[, c(1,3)]
print(newdata)
#colnames(train) <- c("DateTime", "Global_active_power")
#train$DateTime <- paste(train$Date, train$Time)
print(train$DateTime)
DataDf <- read.table("train.txt", header = T, sep = ",")
DataDf$day <- weekdays(as.Date(DataDf$Date,'%d/%m/%Y'))
DataDf$Month<-returnMonth(as.Date(DataDf$Date))
DataDf$Hour<-returnHour(DataDf$Time)
#Splitting the data into seasons
summer<-DataDf[which(DataDf$Month>=5 & DataDf$Month<=8 & DataDf$Hour>=16 & DataDf$day=='Friday'),]
winter<-DataDf[which(DataDf$Month>=9 & DataDf$Month<=12& DataDf$day=='Friday' )]
spring<-DataDf[which(DataDf$Month>=1 & DataDf$Month<=4 & DataDf$day=='Friday')]
p_a<-zoo(c(summer$Global_active_power))
x<-rollapply(p_a,width=15,by=14,FUN=mean,align="left")
update<-data.frame(x)
DataDf$day <- weekdays(as.Date(DataDf$Date,'%d/%m/%Y'))
DataDf$Month<-returnMonth(as.Date(DataDf$Date))
DataDf$Hour<-returnHour(DataDf$Time)
summer<-DataDf[which(DataDf$Month>=5 & DataDf$Month<=8 & DataDf$Hour>=16 & DataDf$day=='Friday'),]
winter<-DataDf[which(DataDf$Month>=9 & DataDf$Month<=12& DataDf$day=='Friday' )]
spring<-DataDf[which(DataDf$Month>=1 & DataDf$Month<=4 & DataDf$day=='Friday')]
summer<-DataDf[which(DataDf$Month>=5 & DataDf$Month<=8 & DataDf$Hour>=16 & DataDf$day=='Friday'),]
winter<-DataDf[which(DataDf$Month>=9 & DataDf$Month<=12& DataDf$day=='Friday' )]
winter<-DataDf[which(DataDf$Month>=9 & DataDf$Month<=12& DataDf$day=='Friday' )]
summer<-DataDf[which(DataDf$Month>=5 & DataDf$Month<=8 & DataDf$Hour>=16 & DataDf$day=='Friday'),]
colnames(DataDf)
library(zoo)
library(xts)
library(dplyr)
library(ggplot2)
library(lubridate)
class(DataDf)
library(ggplot2)
head(DataDf)
setwd("/Users/zeeshan/Desktop/cmpt-318-group4")
getwd()
returnMonth <- function(a){
mydate=as.POSIXct(a)
x<-format(mydate,"%m")
new<-as.numeric(x)
return (new)
}
returnHour<-function(a){
Time<-factor(a)
Time_1<-hms(as.character(Time))
update<-hour(Time_1)
return (update)
}
returnMinute<-function(a){
Time<-factor(a)
Time_1<-hms(as.character(Time))
update<-minute(Time_1)
return (update)
}
#Created Function for Point Anomalies using the vector array to compare the values
findPoint<-function(a,value){
v<-as.vector(a)
x<-c(v$x)
for (i in 1:length(x)) {
if(i+1==length(x)){
break
}
t1=x[i]
t2=x[i+1]
diff=t2-t1
if(diff>value){
print("Anomaly")
}
if(diff<value){
print("Normal")
}
}
}
require(zoo)
#Printing Friday evening
DataDf <- read.table("train.txt", header = T, sep = ",")
DataDf$day <- weekdays(as.Date(DataDf$Date,'%d/%m/%Y'))
DataDf$Month<-returnMonth(as.Date(DataDf$Date))
DataDf$Hour<-returnHour(DataDf$Time)
#Splitting the data into seasons
summer<-DataDf[which(DataDf$Month>=5 & DataDf$Month<=8 & DataDf$Hour>=16 & DataDf$day=='Friday'),]
winter<-DataDf[which(DataDf$Month>=9 & DataDf$Month<=12& DataDf$day=='Friday' )]
spring<-DataDf[which(DataDf$Month>=1 & DataDf$Month<=4 & DataDf$day=='Friday')]
write.table(summer,"summer.txt",sep="\t",row.names=TRUE)
winter<-DataDf[which(DataDf$Month>=9 & DataDf$Month<=12 & DataDf$day=='Friday' ),]
spring<-DataDf[which(DataDf$Month>=1 & DataDf$Month<=4 & DataDf$day=='Friday'),]
returnYear<-function(a){
mydate=as.POSIXct(a)
y<-format(mydate,"%y")
new<-as.numeric(y)
return(new)
}
DataDf$year<-returnYear(DataDf$Date)
summer<-DataDf[which(DataDf$Month>=5 & DataDf$Month<=8 & DataDf$Hour>=16 & DataDf$day=='Friday' & DataDf$year=2010),]
summer<-DataDf[which(DataDf$Month>=5 & DataDf$Month<=8 & DataDf$Hour>=16 & DataDf$day=='Friday' & DataDf$year==2010),]
write.table(summer,"summer.txt",sep="\t",row.names=TRUE)
returnYear<-function(a){
mydate=as.POSIXct(a)
y<-format(mydate,"%Y")
new<-as.numeric(y)
return(new)
}
DataDf$year<-returnYear(DataDf$Date)
summer<-DataDf[which(DataDf$Month>=5 & DataDf$Month<=8 & DataDf$Hour>=16 & DataDf$day=='Friday' & DataDf$year==2010),]
write.table(summer,"summer.txt",sep="\t",row.names=TRUE)
test<-"12/09/2009"
g<-returnYear(test)
print(g)
returnYear<-function(a){
mydate=as.POSIXct(a)
y<-format(mydate,"%y")
new<-as.numeric(y)
return(new)
}
test<-"12/09/2009"
g<-returnYear(test)
print(g)
mydate=as.POSIXct(a)
x<-format(mydate,"%m/%d/%Y")
y<-format(x,'%Y')
returnMonth <- function(a){
mydate=as.POSIXct(a)
x<-format(mydate,"%m/%d/%Y")
y<-format(x,'%Y')
new<-as.numeric(x)
return (new)
}
test<-"12/09/2009"
g<-returnYear(test)
print(g)
returnMonth <- function(a){
mydate=as.POSIXct(a)
x<-format(mydate,"%m")
new<-as.numeric(x)
return (new)
}
returnYear<-function(a){
mydate=as.POSIXct(a)
y<-format(mydate,"%m/%d/%Y")
z<-format(mydate,'%Y')
new<-as.numeric(z)
return(new)
}
test<-"12/09/2009"
g<-returnYear(test)
print(g)
returnYear<-function(a){
mydate=as.POSIXct(a)
y<-format(mydate,'%m/%d/%Y')
z<-format(mydate,'%Y')
new<-as.numeric(z)
return(new)
}
returnYear<-function(a){
mydate=as.POSIXct(a)
y<-format(mydate,'%d/%m/%Y')
z<-format(mydate,'%Y')
new<-as.numeric(z)
return(new)
}
test<-"12/09/2009"
g<-returnYear(test)
print(g)
test<-"12/09/2009"
g<-returnMonth(test)
print(g)
returnYear<-function(a){
mydate=as.POSIXct(a)
y<-format(mydate,'%Y')
new<-as.numeric(y)
return(new)
}
test<-"12/09/2009"
g<-returnMonth(test)
print(g)
test<-"12/09/2010"
g<-returnMonth(test)
print(g)
test<-"12/09/2010"
g<-returnYear(test)
print(g)
returnYear<-function(a){
mydate=as.POSIXct(a)
year = format(mydate, format="%Y")
new<-as.numeric(year)
return(new)
}
test<-"12/09/2010"
g<-returnYear(test)
print(g)
returnYear<-function(a){
mydate=as.POSIXct(a)
day = format(date, format="%d")
month = format(date, format="%m")
year = format(mydate, format="%Y")
new<-as.numeric(year)
return(new)
}
test<-"12/09/2010"
g<-returnYear(test)
print(g)
summer<-DataDf[which(DataDf$Month>=5 & DataDf$Month<=8 & DataDf$Hour>=16 & DataDf$day=='Friday' ),]
write.table(summer,"summer.txt",sep="\t",row.names=TRUE)
returnMonth <- function(a){
mydate=as.POSIXct(a)
year<-mydate$year
new<-as.numeric(year)
return (new)
}
returnMonth <- function(a){
mydate=as.POSIXct(a)
x<-format(mydate,"%m")
new<-as.numeric(x)
return (new)
}
returnMonth <- function(a){
mydate=as.POSIXct(a)
x<-format(mydate,"%m")
new<-as.numeric(x)
return (new)
}
DataDf$Month<-returnMonth(as.Date(DataDf$Date))
summer<-DataDf[which(DataDf$Month>=5 & DataDf$Month<=8 & DataDf$Hour>=16 & DataDf$day=='Friday'),]
write.table(summer,"summer.txt",sep="\t",row.names=TRUE)
summer<-DataDf[which(DataDf$Month>=5 & DataDf$Month<=8 & DataDf$Hour>=16 & DataDf$day=='Friday'),]
write.table(summer,"summer.txt",sep="\t",row.names=TRUE)
returnYear<-function(a){
mydate=as.POSIXct(a)
x<-mydate$year
new<-as.numeric(x)
return (new)
}
date<-"12/09/2012"
returnYear(date)
returnYear<-function(a){
mydate=as.POSIXct(a)
Year <- as.numeric(format(mydate,"%Y"))
return (Year)
}
date<-"12/09/2012"
returnYear(date)
returnYear<-function(a){
mydate=as.POSIXct(a)
Year <- as.numeric(format(mydate,"%Y"))
return (Year)
}
date<-"12/09/2013"
returnYear(date)
returnYear<-function(a){
mydate=as.POSIXct(a)
Year <- as.numeric(format(mydate,"%d/%m/%Y"))
return (Year)
}
date<-"12/09/2013"
returnYear(date)
returnYear<-function(a){
mydate=as.POSIXct(a)
x <- as.numeric(format(mydate,"%d/%m/%Y"))
y<-format(x,"%Y")
return (y)
}
date<-"12/09/2013"
returnYear(date)
returnYear<-function(a){
mydate=as.POSIXct(a)
x <- as.numeric(format(mydate,'%d/%m/%Y'))
y<-format(x,"%Y")
return (y)
}
date<-"12/09/2013"
returnYear(date)
x <- as.numeric(format(mydate,'%Y'))
returnYear<-function(a){
mydate=as.POSIXct(a)
x <- as.numeric(format(mydate,'%Y'))
return (x)
}
date<-"12/09/2013"
returnYear(date)
mydate=as.POSIXct(a)
x <- format(as.Date(mydate, format="%d/%m/%Y"),"%Y")
return (x)
returnYear<-function(a){
mydate=as.POSIXct(a)
x <- format(as.Date(mydate, format="%d/%m/%Y"),"%Y")
return (x)
}
date<-"12/09/2013"
returnYear(date)
returnYear<-function(a){
x <- format(as.Date(a, format="%d/%m/%Y"),"%Y")
return (x)
}
date<-"12/09/2013"
returnYear(date)
returnYear<-function(a){
x <- format(as.Date(a, format="%d/%m/%Y"),"%Y")
new<-as.numeric(x)
return (new)
}
date<-"12/09/2013"
returnYear(date)
DataDf$year<-returnYear(DataDf$Date)
summer<-DataDf[which(DataDf$Month>=5 & DataDf$Month<=8 & DataDf$Hour>=16 & DataDf$day=='Friday' & DataDf$year>=2009 & DataDf$year<=2010),]
write.table(summer,"summer.txt",sep="\t",row.names=TRUE)
summer<-DataDf[which(DataDf$Month>=5 & DataDf$Month<=8 & DataDf$Hour>=16 & DataDf$day=='Friday' & DataDf$year>=2007 & DataDf$year<=2008),]
write.table(summer,"summer.txt",sep="\t",row.names=TRUE)
find_min<-min(c(summer$Global_active_power))
print(find_min)
print(find_max)
find_max<-min(c(summer$Global_active_power))
print(find_max)
find_max<-max(c(summer$Global_active_power))
print(find_max)
find_min<-min(c(summer$Global_active_power))
find_max<-max(c(summer$Global_active_power))
find_mean<-mean(c(summer$Global_active_power))
print(find_mean)
print(find_sd)
find_sd<-sd(summer$Global_active_power)
print(find_sd)
findAnomalies<-function(a,col,Data){
find_min<-min(c(summer$col))
find_max<-max(c(summer$col))
find_mean<-mean(c(summer$col))
find_sd<-sd(summer$col)
x<-c(a$col)
for (i in 1:length(x)){
if(v[i]>find_max){
Data$anomaly<-"Anomaly"
}
else if (v[i]<find_min){
Data$anomaly<-"Anomaly"
}
else{
Data$anomaly<-"Normal"
}
}
return (Data)
}
findAnomalies(summer,Global_active_power,summer)
findAnomalies<-function(a,col,Data){
find_min<-min(c(ar$col))
find_max<-max(c(a$col))
find_mean<-mean(c(a$col))
find_sd<-sd(a$col)
x<-c(a$col)
for (i in 1:length(x)){
if(v[i]>find_max){
Data$anomaly<-"Anomaly"
}
else if (v[i]<find_min){
Data$anomaly<-"Anomaly"
}
else{
Data$anomaly<-"Normal"
}
}
return (Data)
}
findAnomalies(summer,Global_active_power,summer)
findAnomalies<-function(a,col)
find_min<-min(c(ar$col))
find_max<-max(c(a$col))
find_mean<-mean(c(a$col))
find_sd<-sd(a$col)
x<-c(a$col)
for (i in 1:length(x)){
if(v[i]>find_max){
a$anomaly<-"Anomaly"
}
else if (v[i]<find_min){
a$anomaly<-"Anomaly"
}
else{
a$anomaly<-"Normal"
}
}
return (a)
}
findAnomalies<-function(a,col){
find_min<-min(c(ar$col))
find_max<-max(c(a$col))
find_mean<-mean(c(a$col))
find_sd<-sd(a$col)
x<-c(a$col)
for (i in 1:length(x)){
if(v[i]>find_max){
a$anomaly<-"Anomaly"
}
else if (v[i]<find_min){
a$anomaly<-"Anomaly"
}
else{
a$anomaly<-"Normal"
}
}
return (a)
}
findAnomalies(summer,Global_active_power)
x<-findAnomalies(summer,Global_active_power)
x<-findAnomalies(summer,Global_active_power)
findAnomalies<-function(a,col){
find_min<-min(c(ar$col))
find_max<-max(c(a$col))
find_mean<-mean(c(a$col))
find_sd<-sd(a$col)
x<-c(a$col)
for (i in 1:length(x)){
if(x[i]>find_max){
a$anomaly<-"Anomaly"
}
else if (x[i]<find_min){
a$anomaly<-"Anomaly"
}
else{
a$anomaly<-"Normal"
}
}
return (a)
x<-findAnomalies(summer,Global_active_power)
x<-findAnomalies(summer,Global_active_power)
write.table(x,"anomaly.txt",sep="\t",row.names=TRUE)
write.table(x,"anomaly.txt",sep="\t",row.names=TRUE)
class(update)
summer<-DataDf[which(DataDf$Month>=5 & DataDf$Month<=8 & DataDf$Hour>=16 & DataDf$day=='Friday' & DataDf$year>=2007 & DataDf$year<=2008),]
winter<-DataDf[which(DataDf$Month>=9 & DataDf$Month<=12 & DataDf$day=='Friday' ),]
spring<-DataDf[which(DataDf$Month>=1 & DataDf$Month<=4 & DataDf$day=='Friday'),]
#Finding Point Anomalies
p_a<-zoo(c(summer$Global_active_power))
x<-rollapply(p_a,width=15,by=14,FUN=mean,align="left")
update<-data.frame(x)
#Finding Max and Min of Columns in Summer Dataset to find anomalies
update<-findAnomalies(summer,Global_active_power)
findAnomalies<-function(a,col){
find_min<-min(c(ar$col))
find_max<-max(c(a$col))
find_mean<-mean(c(a$col))
find_sd<-sd(a$col)
x<-c(a$col)
for (i in 1:length(x)){
if(x[i]>find_max){
a$anomaly<-"Anomaly"
}
else if (x[i]<find_min){
a$anomaly<-"Anomaly"
}
else{
a$anomaly<-"Normal"
}
}
return (a)
}
class(newdata)
update<-findAnomalies(summer,Global_active_power)
class(update)
write.table(x,"anomaly.txt",sep="\t",row.names=TRUE)
update<-findAnomalies(summer,Global_active_power)
class(update)
write.table(x,"anomaly.txt",sep="\t",row.names=TRUE)
write.table(summer,"summer.txt",sep="\t",row.names=TRUE)
